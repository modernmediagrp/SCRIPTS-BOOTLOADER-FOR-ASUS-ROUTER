#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="SOFTWARE"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="ENABLE"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_BIN: The directory which contains all the common executable files installed by Entware
# 设置自定义变量ENTWARE_BIN为Entware安装的普通可执行文件目录
ENTWARE_BIN="${USB_MOUNT_POINT}/bin"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_SBIN: The directory which contains all the priviliged executable files with installed by Entware
# 设置自定义变量ENTWARE_SBIN为Entware安装的特权可执行文件目录
ENTWARE_SBIN="${USB_MOUNT_POINT}/sbin"
#
# ENTWARE_TMP: The directory which contains all the temporary files installed by Entware
# 设置自定义变量ENTWARE_TMP为Entware安装的临时文件目录
ENTWARE_TMP="${USB_MOUNT_POINT}/tmp"
#
# ENTWARE_USR: The directory which contains all the external software resources installed by Entware
# 设置自定义变量ENTWARE_USR为Entware安装的外部软件资源目录
ENTWARE_USR="${USB_MOUNT_POINT}/usr"
#
# ENTWARE_VAR: The directory which contains all the variable files installed by Entware
# 设置自定义变量ENTWARE_VAR为Entware安装的可变文件目录
ENTWARE_VAR="${USB_MOUNT_POINT}/var"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# ENTWARE_FWD: The directory which contains all the configuration files used by fwd
# 设置自定义变量ENTWARE_FWD为fwd配置文件目录
ENTWARE_FWD="${ENTWARE_ETC}/fw.d"
#
# ENTWARE_MONITD: The directory which contains all the configuration files used by monit
# 设置自定义变量ENTWARE_MONITD为monit配置文件目录
ENTWARE_MONITD="${ENTWARE_ETC}/monit.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/software"
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN="${PRIVATE_ROOT}/bin"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
# PRIVATE_TMP: The directory which contains all the temporary files related to this program
# 设置自定义变量PRIVATE_TMP为此程序临时文件目录
PRIVATE_TMP="${PRIVATE_ROOT}/tmp"
#
# PRIVATE_USR: The directory which contains all the external software resources related to this program
# 设置自定义变量PRIVATE_USR为此程序外部软件资源目录
PRIVATE_USR="${PRIVATE_ROOT}/usr"
#
# PRIVATE_VAR: The directory which contains all the variable files related to this program
# 设置自定义变量PRIVATE_VAR为此程序可变文件目录
PRIVATE_VAR="${PRIVATE_ROOT}/var"
#
# SOFTWARE_PID_FILE: The path to software.pid
# 设置自定义变量SOFTWARE_PID_FILE为文件software.pid的绝对路径
SOFTWARE_PID_FILE="/var/run/software.pid"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ---------*"
#
########## END ##########
#
#
########## CHECK AND ENABLE SOFTWARE ##########
#
# Check if ${PRIVATE_USR}/software exists
# 检查文件${PRIVATE_USR}/software是否存在
if [ -e "${PRIVATE_USR}/software" ]
then
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ALL THE PREREQUISITES ARE MET"
    #
    # Load ${PRIVATE_USR}/software
    # 如果文件${PRIVATE_USR}/software存在，则执行
    /opt/bin/nohup "${PRIVATE_USR}/software" &> /dev/null &
    #
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 0
    #
else
    # Do nothing but prompt the user
    # 如果文件${PRIVATE_USR}/software不存在，则执行
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: NOT ALL THE PREREQUISITES ARE MET"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 1
fi
#
########## END ##########